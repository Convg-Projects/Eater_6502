PORTB = $6000
PORTA = $6001
DDRB =  $6002
DDRA =  $6003

E  = %10000000
RW = %01000000
RS = %00100000

 .org $8000

 _start:
	ldx #$ff
	txs			; Initialise SP

	lda #%11111111		; Set all pins on Port B to output
       	sta DDRB
	lda #%11100000		; Set top 3 pins on port A to output
	sta DDRA
	lda #%00111000		; Set LCD to 8-bit mode, 2-line display, 5x8 font
	jsr lcd_instruction
	lda #%00001110		; Display on, cursor on, blink off
	jsr lcd_instruction
	lda #%00000110		; Increment and shift cursor without shifting display
	jsr lcd_instruction
	lda #%00000001		; Clear display
	jsr lcd_instruction

	ldx #0
 print_message:
	lda message,x
	beq loop
	jsr print_character
	inx
	jmp print_message

 loop:
	jmp loop

 message:  .asciiz "Hello, world"

 lcd_wait:
	pha
	lda #%00000000		; Set all pins on Port B to intput
	sta DDRB
 lcd_busy:
	lda #RW
	sta PORTA
	lda #(RW | E)
	sta PORTA
	lda PORTB
	and #%10000000
	bne lcd_busy

	lda #RW
	sta PORTA
	lda #%11111111		; Set all pins on Port B to output
	sta DDRB
	pla
	rts

 lcd_instruction:
	jsr lcd_wait
	sta PORTB
	lda #0			; Clear control pins
	sta PORTA
	lda #E			; Set enable bit to send instruction
	sta PORTA
	lda #0			; Clear control pins
	sta PORTA
	rts

 print_character:
	jsr lcd_wait
	sta PORTB
	lda #RS			; Enable register select to write
	sta PORTA
	lda #(RS | E)		; Set enable bit to send instruction
	sta PORTA
	lda #RS			; Enable register select to write
	sta PORTA
	rts

 .org $fffc
 .word _start
 .word $0000
